name: 'Armbian/build'
author: 'Stefan Dej'
description: 'Build armbian images'
inputs:
  board:
    description: 'Armbian board name'
    required: true
  release-id:
    description: 'ID from github release'
    required: false
  github-token:
    description: 'github token'
    required: true


runs:
  using: 'composite'
  steps:
    - name: Runner prepare
      uses: meteyou/armbian-builds/actions/runner-prepare@test-self-hosted

    - name: Checkout armbian/build
      uses: actions/checkout@v3
      with:
        fetch-depth: 1
        repository: armbian/build
        ref: master
        path: build

    - name: Checkout meteyou/armbian-builds
      uses: actions/checkout@v3
      with:
        fetch-depth: 1
        repository: meteyou/armbian-builds
        path: scripts

    - name: Copy templates
      shell: bash
      run: |
        mkdir -p build/userpatches
        cp scripts/configs/* build/userpatches/

    - name: Pull Docker image
      shell: bash
      run: |
        sudo apt-get -yy install docker containerd docker.io
        sudo docker kill $(sudo docker ps -q) 2>/dev/null || true
        sudo docker image rm $(sudo docker images | grep -v $(cat build/VERSION | sed 's/trunk.*/trunk/')"-$(dpkg --print-architecture)" | grep armbian | awk 'NR>1 {print $3}') 2> /dev/null || true 
        sudo docker pull ghcr.io/armbian/build:$(cat build/VERSION  | cut -d"." -f1-2)"-$(dpkg --print-architecture)"

    - name: Build Image
      shell: bash
      run: |
        cd ./build
        ./compile.sh docker BOARD=${{ inputs.board }}

#    - name: Upload Image to Release
#      if: inputs.release-id != '' && inputs.github-token != ''
#      uses: xresloader/upload-to-github-release@v1
#      env:
#        GITHUB_TOKEN: ${{ inputs.github-token }}
#      with:
#        release_id: ${{ inputs.release-id }}
#        file: ./build/output/images/*
#        draft: false

#    - name: Rollback release
#      if: failure() && inputs.release-id != '' && inputs.github-token != ''
#      uses: author/action-rollback@stable
#      env:
#        GITHUB_TOKEN: ${{ inputs.github-token }}
#      with:
#        release_id: ${{ inputs.release-id }}
