name: 'Armbian/build'
author: 'Stefan Dej'
description: 'Build armbian images'
inputs:
  configfile:
    description: 'Config file name'
    required: true
  release-id:
    description: 'ID from github release'
    required: false
  github-token:
    description: 'github token'
    required: true


runs:
  using: 'composite'
  steps:
    - name: Runner prepare
      uses: meteyou/armbian-builds/actions/runner-prepare@test-self-hosted

    - name: Checkout armbian/build
      uses: actions/checkout@v3
      with:
        fetch-depth: 1
        repository: armbian/build
        ref: master
        path: build

    - name: Checkout meteyou/armbian-builds
      uses: actions/checkout@v3
      with:
        fetch-depth: 1
        repository: meteyou/armbian-builds
        path: build-configs

    - name: Read configs
      id: config
      shell: bash
      run: |
        source ./build-configs/configs/config-default.conf
        source ./build-configs/configs/board-${{ inputs.configfile }}.conf
        
        echo "::set-output name=release::${RELEASE}"        
        echo "::set-output name=branch::${BRANCH}"        
        echo "::set-output name=build_desktop::${BUILD_DESKTOP}"
        echo "::set-output name=build_minimal::${BUILD_MINIMAL}"
        echo "::set-output name=kernel_only::${KERNEL_ONLY}"
        echo "::set-output name=kernel_configure::${KERNEL_CONFIGURE}"
        echo "::set-output name=bootfs_type::${BOOTFS_TYPE}"
        echo "::set-output name=compress_outputimage::${COMPRESS_OUTPUTIMAGE}"
        echo "::set-output name=repository_install::${REPOSITORY_INSTALL}"
        echo "::set-output name=board::${BOARD}"

    - name: Build Image
      shell: bash
      run: |
        cd ./build
       ./compile.sh \
          BOARD=${{ steps.config.outputs.board }} \
          RELEASE=${{ steps.config.outputs.release }} \
          BRANCH=${{ steps.config.outputs.branch }} \
          BUILD_DESKTOP=${{ steps.config.outputs.build_desktop }} \
          BUILD_MINIMAL=${{ steps.config.outputs.build_minimal }} \
          KERNEL_ONLY=${{ steps.config.outputs.kernel_only }} \
          KERNEL_CONFIGURE=${{ steps.config.outputs.kernel_configure }} \
          BOOTFS_TYPE=${{ steps.config.outputs.bootfs_type }} \
          COMPRESS_OUTPUTIMAGE=${{ steps.config.outputs.compress_outputimage }} \
          REPOSITORY_INSTALL=${{ steps.config.outputs.repository_install }}

    - name: Fix userrights
      shell: bash
      run: |
        WORKSPACE=$(echo ${{ github.workspace }})
        sudo chown -R $USER:$USER $WORKSPACE/build/. || true
        sudo df

#    - name: Upload Image to Release
#      if: inputs.release-id != '' && inputs.github-token != ''
#      uses: xresloader/upload-to-github-release@v1
#      env:
#        GITHUB_TOKEN: ${{ inputs.github-token }}
#      with:
#        release_id: ${{ inputs.release-id }}
#        file: ./build/output/images/*
#        draft: false
